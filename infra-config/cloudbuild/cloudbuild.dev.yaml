# Cloud Build configuration for infrastructure management (development)
steps:
  # 1. Install Terraform
  - name: 'hashicorp/terraform:1.5.0'
    id: Install Terraform
    entrypoint: sh
    args:
      - '-c'
      - |
        terraform version
        echo "Terraform installed successfully"

  # 2. Initialize Terraform
  - name: 'hashicorp/terraform:1.5.0'
    id: Terraform Init
    entrypoint: sh
    args:
      - '-c'
      - |
        cd terraform/roastah-d
        terraform init -backend-config="bucket=${_TF_STATE_BUCKET}" -backend-config="prefix=terraform/state"
        echo "Terraform initialized successfully"

  # 3. Terraform Plan
  - name: 'hashicorp/terraform:1.5.0'
    id: Terraform Plan
    entrypoint: sh
    args:
      - '-c'
      - |
        cd terraform/roastah-d
        terraform plan -out=tfplan -var-file="terraform.tfvars" -detailed-exitcode
        echo "Terraform plan completed"

  # 4. Terraform Apply (with approval)
  - name: 'hashicorp/terraform:1.5.0'
    id: Terraform Apply
    entrypoint: sh
    args:
      - '-c'
      - |
        cd terraform/roastah-d
        terraform apply -auto-approve tfplan
        echo "Terraform apply completed successfully"

  # 5. Validate Infrastructure
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: Validate Infrastructure
    entrypoint: bash
    args:
      - '-c'
      - |
        # Validate Cloud Run services exist and are healthy
        echo "Validating Cloud Run services..."
        gcloud run services list --region=${_REGION} --filter="metadata.name:roastah-d" --format="table(metadata.name,status.conditions[0].status)"
        
        # Validate Artifact Registry repositories exist
        echo "Validating Artifact Registry repositories..."
        gcloud artifacts repositories list --location=${_REGION} --filter="name:roastah-d"
        
        # Validate IAM bindings
        echo "Validating IAM bindings..."
        gcloud projects get-iam-policy ${PROJECT_ID} --flatten="bindings[].members" --format="table(bindings.role)" --filter="bindings.members:serviceAccount:cloudbuild@${PROJECT_ID}.iam.gserviceaccount.com"
        
        echo "Infrastructure validation completed"

  # 6. Send Infrastructure Notification
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: Send Notification
    entrypoint: bash
    args:
      - '-c'
      - |
        gcloud pubsub topics publish ci-notify \
          --message="Infrastructure deployment completed for commit $COMMIT_SHA" \
          --attribute="status=success,environment=development,type=infrastructure,commit=$COMMIT_SHA"

substitutions:
  _REGION: 'us-central1'
  _TF_STATE_BUCKET: 'roastah-d-terraform-state'

timeout: '1800s'

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'

# IAM Requirements (managed by Terraform):
# - Cloud Build Service Account needs:
#   - roles/run.admin on roastah-d project
#   - roles/storage.admin on roastah-d project
#   - roles/pubsub.publisher on ci-notify topic
#   - roles/iam.serviceAccountUser on roastah-d project
#   - roles/secretmanager.secretAccessor on roastah-d project
#   - roles/artifactregistry.admin on roastah-d project
#
# All IAM permissions are now managed by Terraform